//====================================================================================================
// Base code generated with LeatherGoods - ASF.Business
// Architecture Solutions Foundation
//
// Generated by academic at LeatherGoods V 1.0 
//====================================================================================================

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using ASF.Entities;
using ASF.Data;


namespace ASF.Business
{
    /// <summary>
    /// CartBusiness business component.
    /// </summary>
    public class CartBusiness
    {
        /// <summary>
        /// Add method. 
        /// </summary>
        /// <param name="cart"></param>
        /// <returns></returns>
        public Cart Add(Cart cart)
        {
            var cartDac = new CartDac();
            return cartDac.Create(cart);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id"></param>
        public void Remove(int id)
        {
            var cartDac = new CartDac();
            cartDac.DeleteById(id);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <returns></returns>
        public List<Cart> All()
        {
            var cartDac = new CartDac();
            var result = cartDac.Select();
            return result;
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        public Cart Find(int id)
        {
            var cartDac = new CartDac();
            var result = cartDac.SelectById(id);
            return result;
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="cart"></param>
        public void Edit(Cart cart)
        {
            var cartDac = new CartDac();
            var cartItemDac = new CartItemDac();
            List<CartItem> items = cartItemDac.GetAllByCartId(cart.Id);
            foreach (CartItem item in cart.Items) {
                var result = items.Find(x => x.ProductId == item.ProductId);
                if (result != null) {
                    if (item.Quantity > 0) {
                        result.Quantity += item.Quantity;
                        cartItemDac.UpdateById(result);
                        cart.ItemCount += item.Quantity;
                    } else if (item.Quantity < 0) {
                        result.Quantity += item.Quantity;
                        cartItemDac.UpdateById(result);
                        cart.ItemCount += item.Quantity;
                    } else {
                        cart.ItemCount -= result.Quantity;
                        cartItemDac.DeleteById(result.Id);
                    }
                } else {
                    cartItemDac.Create(item);
                    cart.ItemCount += item.Quantity;
                }
            }
            cart.ChangedOn = DateTime.Now;
            cartDac.UpdateById(cart);
        }

        public Cart GetByCookie(string id) {
            var cartDac = new CartDac();
            var result = cartDac.SelectByCookie(id);
            return result;
        }
    }
}
