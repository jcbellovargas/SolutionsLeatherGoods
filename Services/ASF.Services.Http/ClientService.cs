//====================================================================================================
// Base code generated with LeatherGoods - ASF.Services.Http
// Architecture Solutions Foundation
//
// Generated by academic at LeatherGoods V 1.0 
//====================================================================================================

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using ASF.Business;
using ASF.Entities;
using ASF.Services.Contracts;

namespace ASF.Services.Http
{
    /// <summary>
    /// Client HTTP service controller.
    /// </summary>
    [RoutePrefix("rest/Client")]
    public class ClientService : ApiController
    {
        [HttpPost]
        [Route("Add")]
        public Client Add(Client client)
        {
            try
            {
                var bc = new ClientBusiness();
                var result = bc.Add(client);
                return result;
            }
            catch (Exception ex)
            {
                var httpError = new HttpResponseMessage()
                {
                    StatusCode = (HttpStatusCode)422,
                    ReasonPhrase = ex.Message
                };

                throw new HttpResponseException(httpError);
            }
        }

        [HttpGet]
        [Route("All")]
        public AllResponse<Client> All()
        {
            try
            {
                var response = new AllResponse<Client>();
                var bc = new ClientBusiness();
                response.Result = bc.All();
                return response;
            }
            catch (Exception ex)
            {
                var httpError = new HttpResponseMessage()
                {
                    StatusCode = (HttpStatusCode)422,
                    ReasonPhrase = ex.Message
                };

                throw new HttpResponseException(httpError);
            }
        }

        [HttpPost]
        [Route("Edit")]
        public void Edit(Client client)
        {
            try
            {
                var bc = new ClientBusiness();
                bc.Edit(client);
            }
            catch (Exception ex)
            {
                var httpError = new HttpResponseMessage()
                {
                    StatusCode = (HttpStatusCode)422,
                    ReasonPhrase = ex.Message
                };

                throw new HttpResponseException(httpError);
            }
        }

        [HttpGet]
        [Route("Find/{id}")]
        public FindResponse<Client> Find(int id)
        {
            try
            {
                var response = new FindResponse<Client>();
                var bc = new ClientBusiness();
                response.Result = bc.Find(id);
                return response;
            }
            catch (Exception ex)
            {
                var httpError = new HttpResponseMessage()
                {
                    StatusCode = (HttpStatusCode)422,
                    ReasonPhrase = ex.Message
                };

                throw new HttpResponseException(httpError);
            }
        }

        [HttpGet]
        [Route("FindByGuid/{guid}")]
        public FindResponse<Client> FindByGuid(Guid guid) {
            try {
                var response = new FindResponse<Client>();
                var bc = new ClientBusiness();
                response.Result = bc.FindByGuid(guid);
                return response;
            } catch (Exception ex) {
                var httpError = new HttpResponseMessage() {
                    StatusCode = (HttpStatusCode)422,
                    ReasonPhrase = ex.Message
                };

                throw new HttpResponseException(httpError);
            }
        }

        [HttpGet]
        [Route("FindByName/{name}")]
        public FindResponse<Client> FindByName(string name) {
            try {
                var response = new FindResponse<Client>();
                var bc = new ClientBusiness();
                response.Result = bc.FindByName(name);
                return response;
            } catch (Exception ex) {
                var httpError = new HttpResponseMessage() {
                    StatusCode = (HttpStatusCode)422,
                    ReasonPhrase = ex.Message
                };

                throw new HttpResponseException(httpError);
            }
        }

        [HttpGet]
        [Route("FindByUser/{name}")]
        public FindResponse<Client> FindByUser(string name) {
            try {
                var response = new FindResponse<Client>();
                var bc = new ClientBusiness();
                response.Result = bc.FindByUser(name);
                return response;
            } catch (Exception ex) {
                var httpError = new HttpResponseMessage() {
                    StatusCode = (HttpStatusCode)422,
                    ReasonPhrase = ex.Message
                };

                throw new HttpResponseException(httpError);
            }
        }

        [HttpGet]
        [Route("Remove/{id}")]
        public void Remove(int id)
        {
            try
            {
                var bc = new ClientBusiness();
                bc.Remove(id);
            }
            catch (Exception ex)
            {
                var httpError = new HttpResponseMessage()
                {
                    StatusCode = (HttpStatusCode)422,
                    ReasonPhrase = ex.Message
                };

                throw new HttpResponseException(httpError);
            }
        }
    }
}

